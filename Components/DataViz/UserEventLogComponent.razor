@using ApexCharts
@using ShiftWorx.Components.Methods
@using ShiftWorx.Components.Responses
@inject FpData _context;
<MudCard>
    <MudTable Items="@Logs.data.events" Hover="true" SortLabel="Sort By" Filter="new Func<GetLogsResponse.Event_Logs,bool>(FilterFunc1)">
        <ToolBarContent>
            <MudText Typo="Typo.h6">User Event Log</MudText>
            <MudSpacer />
            <MudTextField @bind-Value="searchString1" Placeholder="Search" Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.Search" IconSize="Size.Medium" Class="mt-0"></MudTextField>
        </ToolBarContent>
        <HeaderContent>
            <MudTh><MudTableSortLabel SortBy="new Func<GetLogsResponse.Event_Logs, object>(x=>x.created_at)">Date</MudTableSortLabel></MudTh>
            <MudTh><MudTableSortLabel SortBy="new Func<GetLogsResponse.Event_Logs, object>(x=>x.str_val)">Event</MudTableSortLabel></MudTh>
        </HeaderContent>
        <RowTemplate>
            <MudTd DataLabel="Date">@DateTimeOffset.FromUnixTimeSeconds(@context.created_at).DateTime.ToLocalTime()</MudTd>
            <MudTd DataLabel="Event">@context.str_val</MudTd>
        </RowTemplate>
        <PagerContent>
            <MudTablePager PageSizeOptions="new int[]{5, 10}" />
        </PagerContent>
    </MudTable>
</MudCard>
@code {
    private string searchString1 = "";
    private bool FilterFunc1(GetLogsResponse.Event_Logs element) => FilterFunc(element, searchString1);

    private bool FilterFunc(GetLogsResponse.Event_Logs element, string searchString)
    {
        if (string.IsNullOrWhiteSpace(searchString))
            return true;
        if (element.str_val.Contains(searchString, StringComparison.OrdinalIgnoreCase))
            return true;
        return false;
    }

    GetLogsResponse Logs = new();
    public void GetRunningStatusCodes()
    {
        var Datetime = DateTime.Now.AddDays(-7).ToUnixTimeMilliseconds() / 1000;
        StateHasChanged();
    }
    protected override async Task OnInitializedAsync()
    {
        GetRunningStatusCodes();
    }
    public void RefreshState()
    {
        GetRunningStatusCodes();
    }


}









