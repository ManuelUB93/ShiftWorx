// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ShiftWorx.Data;

#nullable disable

namespace ShiftWorx.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20221018173515_RenameChelistRuleToItemRule")]
    partial class RenameChelistRuleToItemRule
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("ShiftWorx.Models.Attachment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime?>("AttachedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("AttachedJobId")
                        .HasColumnType("int");

                    b.Property<int?>("AttachedStatusCodeId")
                        .HasColumnType("int");

                    b.Property<int>("AttachmentType")
                        .HasColumnType("int");

                    b.Property<string>("CollecterName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CollectorId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DetachedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("MachineId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("fp_core_Id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AttachedJobId");

                    b.HasIndex("AttachedStatusCodeId");

                    b.HasIndex("MachineId");

                    b.ToTable("Attachment");
                });

            modelBuilder.Entity("ShiftWorx.Models.Checklist", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime?>("ActiveOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("AssignedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CompletedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DataSourceTagId")
                        .HasColumnType("int");

                    b.Property<string>("Decscription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DueOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("EnabledColumns")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnabledCustomColumns")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Fp_Core_RoleId")
                        .HasColumnType("int");

                    b.Property<int?>("Fp_Core_UserId")
                        .HasColumnType("int");

                    b.Property<bool>("HasFailed")
                        .HasColumnType("bit");

                    b.Property<bool>("IsWorkorder")
                        .HasColumnType("bit");

                    b.Property<int?>("JobId")
                        .HasColumnType("int");

                    b.Property<int?>("MachineId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("OperationId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("StartedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int?>("TemplateId")
                        .HasColumnType("int");

                    b.Property<string>("UnlockedColumns")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UserTagId")
                        .HasColumnType("int");

                    b.Property<string>("WorkInstructions")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("fp_core_id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("DataSourceTagId");

                    b.HasIndex("Fp_Core_RoleId");

                    b.HasIndex("Fp_Core_UserId");

                    b.HasIndex("JobId");

                    b.HasIndex("MachineId");

                    b.HasIndex("OperationId");

                    b.HasIndex("TemplateId");

                    b.HasIndex("UserTagId");

                    b.ToTable("Checklist");
                });

            modelBuilder.Entity("ShiftWorx.Models.ChecklistItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("ChecklistId")
                        .HasColumnType("int");

                    b.Property<int?>("ChecklistTemplateSectionId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("DataType")
                        .HasColumnType("int");

                    b.Property<int>("DecimalPlaces")
                        .HasColumnType("int");

                    b.Property<string>("Decscription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<bool>("HasSelector")
                        .HasColumnType("bit");

                    b.Property<bool>("HasValue")
                        .HasColumnType("bit");

                    b.Property<string>("Identifier")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsRuleEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("Masking")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RuleId")
                        .HasColumnType("int");

                    b.Property<int>("SectionId")
                        .HasColumnType("int");

                    b.Property<int?>("SelectedOptionId")
                        .HasColumnType("int");

                    b.Property<int?>("SelectorId")
                        .HasColumnType("int");

                    b.Property<int?>("TemplateId")
                        .HasColumnType("int");

                    b.Property<string>("Units")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserNotes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("VslueRequired")
                        .HasColumnType("bit");

                    b.Property<int>("fp_core_id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ChecklistTemplateSectionId");

                    b.HasIndex("RuleId");

                    b.HasIndex("SectionId");

                    b.HasIndex("SelectedOptionId");

                    b.HasIndex("SelectorId")
                        .IsUnique()
                        .HasFilter("[SelectorId] IS NOT NULL");

                    b.HasIndex("TemplateId");

                    b.ToTable("ChecklistItem");
                });

            modelBuilder.Entity("ShiftWorx.Models.ChecklistItemRule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<double>("CriteriaValue")
                        .HasColumnType("float");

                    b.Property<double?>("CriteriaValue2")
                        .HasColumnType("float");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsCritical")
                        .HasColumnType("bit");

                    b.Property<int?>("TemplateId")
                        .HasColumnType("int");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("TemplateId");

                    b.ToTable("ChecklistItemRule");
                });

            modelBuilder.Entity("ShiftWorx.Models.ChecklistItemSelector", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("ChecklistItemId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("fp_core_id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ChecklistItemSelector");
                });

            modelBuilder.Entity("ShiftWorx.Models.ChecklistItemSelectorOption", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ChecklistItemSelectorId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<bool>("IsPositive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("fp_core_id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ChecklistItemSelectorId");

                    b.ToTable("ChecklistItemSelectorOption");
                });

            modelBuilder.Entity("ShiftWorx.Models.ChecklistSection", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ChecklistId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<string>("Heading")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SubHeading")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TemplateId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("fp_core_id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ChecklistId");

                    b.HasIndex("TemplateId");

                    b.ToTable("ChecklistSection");
                });

            modelBuilder.Entity("ShiftWorx.Models.ChecklistTemplate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime?>("ActiveOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("AssignedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CompletedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Decscription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DueOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("EnabledColumns")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnabledCustomColumns")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("HasFailed")
                        .HasColumnType("bit");

                    b.Property<bool>("IsWorkorder")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("StartedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("UnlockedColumns")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("WorkInstructions")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("fp_core_id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.ToTable("ChecklistTemplate");
                });

            modelBuilder.Entity("ShiftWorx.Models.ChecklistTemplateFpCoreRole", b =>
                {
                    b.Property<int>("ChecklistTemplateId")
                        .HasColumnType("int");

                    b.Property<int>("FpCoreRoleId")
                        .HasColumnType("int");

                    b.HasKey("ChecklistTemplateId", "FpCoreRoleId");

                    b.HasIndex("FpCoreRoleId");

                    b.ToTable("ChecklistTemplateFpCoreRole");
                });

            modelBuilder.Entity("ShiftWorx.Models.ChecklistTemplateFpCoreUser", b =>
                {
                    b.Property<int>("ChecklistTemplateId")
                        .HasColumnType("int");

                    b.Property<int>("FpCoreUserId")
                        .HasColumnType("int");

                    b.HasKey("ChecklistTemplateId", "FpCoreUserId");

                    b.HasIndex("FpCoreUserId");

                    b.ToTable("ChecklistTemplateFpCoreUser");
                });

            modelBuilder.Entity("ShiftWorx.Models.ChecklistTemplateItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("ChecklistId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("DataType")
                        .HasColumnType("int");

                    b.Property<int>("DecimalPlaces")
                        .HasColumnType("int");

                    b.Property<string>("Decscription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<bool>("HasSelector")
                        .HasColumnType("bit");

                    b.Property<bool>("HasValue")
                        .HasColumnType("bit");

                    b.Property<string>("Identifier")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsRuleEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("Masking")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RuleId")
                        .HasColumnType("int");

                    b.Property<int>("SectionId")
                        .HasColumnType("int");

                    b.Property<string>("SelecterOptionValues")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SelectorId")
                        .HasColumnType("int");

                    b.Property<string>("Units")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserNotes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("VslueRequired")
                        .HasColumnType("bit");

                    b.Property<int>("fp_core_id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RuleId");

                    b.HasIndex("SectionId");

                    b.HasIndex("SelectorId")
                        .IsUnique()
                        .HasFilter("[SelectorId] IS NOT NULL");

                    b.ToTable("ChecklistTemplateItem");
                });

            modelBuilder.Entity("ShiftWorx.Models.ChecklistTemplateItemRule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<double>("CriteriaValue")
                        .HasColumnType("float");

                    b.Property<double?>("CriteriaValue2")
                        .HasColumnType("float");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsCritical")
                        .HasColumnType("bit");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("ChecklistTemplateItemRule");
                });

            modelBuilder.Entity("ShiftWorx.Models.ChecklistTemplateItemSelector", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("ChecklistTemplateItemId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("fp_core_id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ChecklistTemplateItemSelector");
                });

            modelBuilder.Entity("ShiftWorx.Models.ChecklistTemplateItemSelectorOption", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ChecklistTemplateItemSelectorId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<bool>("IsPositive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("fp_core_id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ChecklistTemplateItemSelectorId");

                    b.ToTable("ChecklistTemplateItemSelectorOption");
                });

            modelBuilder.Entity("ShiftWorx.Models.ChecklistTemplateJob", b =>
                {
                    b.Property<int>("ChecklistTemplateId")
                        .HasColumnType("int");

                    b.Property<int>("JobId")
                        .HasColumnType("int");

                    b.HasKey("ChecklistTemplateId", "JobId");

                    b.HasIndex("JobId");

                    b.ToTable("ChecklistTemplateJob");
                });

            modelBuilder.Entity("ShiftWorx.Models.ChecklistTemplateMachine", b =>
                {
                    b.Property<int>("ChecklistTemplateId")
                        .HasColumnType("int");

                    b.Property<int>("MachineId")
                        .HasColumnType("int");

                    b.HasKey("ChecklistTemplateId", "MachineId");

                    b.HasIndex("MachineId");

                    b.ToTable("ChecklistTemplateMachine");
                });

            modelBuilder.Entity("ShiftWorx.Models.ChecklistTemplateOperation", b =>
                {
                    b.Property<int>("ChecklistTemplateId")
                        .HasColumnType("int");

                    b.Property<int>("OperationId")
                        .HasColumnType("int");

                    b.HasKey("ChecklistTemplateId", "OperationId");

                    b.HasIndex("OperationId");

                    b.ToTable("ChecklistTemplateOperation");
                });

            modelBuilder.Entity("ShiftWorx.Models.ChecklistTemplateSection", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("ChecklistTemplateId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<string>("Heading")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SubHeading")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("fp_core_id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ChecklistTemplateId");

                    b.ToTable("ChecklistTemplateSection");
                });

            modelBuilder.Entity("ShiftWorx.Models.ChecklistTemplateTag", b =>
                {
                    b.Property<int>("ChecklistTemplateId")
                        .HasColumnType("int");

                    b.Property<int>("TagId")
                        .HasColumnType("int");

                    b.HasKey("ChecklistTemplateId", "TagId");

                    b.HasIndex("TagId");

                    b.ToTable("ChecklistTemplateTag");
                });

            modelBuilder.Entity("ShiftWorx.Models.Collector", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FPHardwareId")
                        .HasColumnType("int");

                    b.Property<int?>("MachineId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("fp_data_source_Id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MachineId");

                    b.ToTable("Collector");
                });

            modelBuilder.Entity("ShiftWorx.Models.CollectorData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CollectorId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("ValueBool")
                        .HasColumnType("bit");

                    b.Property<double>("ValueDouble")
                        .HasColumnType("float");

                    b.Property<string>("ValueString")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("CollectorId");

                    b.ToTable("CollectorData");
                });

            modelBuilder.Entity("ShiftWorx.Models.Company", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FactoryKey")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Latitude")
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<string>("Longitude")
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<int?>("MaximumActivityModifier")
                        .HasColumnType("int");

                    b.Property<int?>("MinimumActivityFilter")
                        .HasColumnType("int");

                    b.Property<int?>("MinimumActivityModifier")
                        .HasColumnType("int");

                    b.Property<int?>("MinimumInactivityFilter")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<string>("PostalCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Province")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Street")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("fp_core_Id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Company");
                });

            modelBuilder.Entity("ShiftWorx.Models.Factory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DefaultLayout")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FactoryKey")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("Group")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Latitude")
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<string>("Longitude")
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<int?>("MaximumActivityModifier")
                        .HasColumnType("int");

                    b.Property<int?>("MinimumActivityFilter")
                        .HasColumnType("int");

                    b.Property<int?>("MinimumActivityModifier")
                        .HasColumnType("int");

                    b.Property<int?>("MinimumInactivityFilter")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PostalCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Province")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Street")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("fp_core_Id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.ToTable("Factory");
                });

            modelBuilder.Entity("ShiftWorx.Models.FactoryOption", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("FactoryId")
                        .HasColumnType("int");

                    b.Property<string>("JsonData")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Language")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Locale")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TimeZone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("FactoryId");

                    b.ToTable("FactoryOption");
                });

            modelBuilder.Entity("ShiftWorx.Models.FileAttachment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("BlobId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ChecklistId")
                        .HasColumnType("int");

                    b.Property<int?>("ChecklistItemId")
                        .HasColumnType("int");

                    b.Property<int?>("ChecklistTemplateId")
                        .HasColumnType("int");

                    b.Property<int?>("ChecklistTemplateItemId")
                        .HasColumnType("int");

                    b.Property<string>("Container")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("FileExt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Size")
                        .HasColumnType("float");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UploadedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Uri")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("fp_core_id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ChecklistId");

                    b.HasIndex("ChecklistItemId");

                    b.HasIndex("ChecklistTemplateId");

                    b.HasIndex("ChecklistTemplateItemId");

                    b.ToTable("FileAttachment");
                });

            modelBuilder.Entity("ShiftWorx.Models.FpCoreRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("CompanyId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsHidden")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("fp_core_Id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.ToTable("FpCoreRole");
                });

            modelBuilder.Entity("ShiftWorx.Models.FpCoreUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("fp_core_Id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("FpCoreUser");
                });

            modelBuilder.Entity("ShiftWorx.Models.FreePointProduct", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Alias")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Hide")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("fp_core_id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("FreePointProduct");
                });

            modelBuilder.Entity("ShiftWorx.Models.Job", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClientKey")
                        .HasMaxLength(191)
                        .HasColumnType("nvarchar(191)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CustomerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("EstmatedStartDate")
                        .HasColumnType("datetime2");

                    b.Property<double?>("ExpectedCycleTime")
                        .HasColumnType("float");

                    b.Property<double?>("ExpectedCycleTimeDeviation")
                        .HasColumnType("float");

                    b.Property<int>("FactoryId")
                        .HasColumnType("int");

                    b.Property<bool>("IsOpen")
                        .HasColumnType("bit");

                    b.Property<int?>("JobTemplateId")
                        .HasColumnType("int");

                    b.Property<int?>("Multiplier")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<DateTime?>("PlannedEndDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("RunRateScale")
                        .HasColumnType("int");

                    b.Property<int?>("RuntimeScale")
                        .HasColumnType("int");

                    b.Property<int?>("TargetCount")
                        .HasColumnType("int");

                    b.Property<double?>("TargetRunrate")
                        .HasColumnType("float");

                    b.Property<double?>("TargetRuntime")
                        .HasColumnType("float");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("fp_core_Id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FactoryId");

                    b.ToTable("Job");
                });

            modelBuilder.Entity("ShiftWorx.Models.JobTemplate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClientKey")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CustomerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("EstmatedStartDate")
                        .HasColumnType("datetime2");

                    b.Property<double?>("ExpectedCycleTime")
                        .HasColumnType("float");

                    b.Property<double?>("ExpectedCycleTimeDeviation")
                        .HasColumnType("float");

                    b.Property<int?>("FactoryId")
                        .HasColumnType("int");

                    b.Property<bool>("IsOpen")
                        .HasColumnType("bit");

                    b.Property<int?>("Multiplier")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<DateTime?>("PlannedEndDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("RunRateScale")
                        .HasColumnType("int");

                    b.Property<int?>("RuntimeScale")
                        .HasColumnType("int");

                    b.Property<int?>("TargetCount")
                        .HasColumnType("int");

                    b.Property<double?>("TargetRunrate")
                        .HasColumnType("float");

                    b.Property<double?>("TargetRuntime")
                        .HasColumnType("float");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("fp_core_Id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FactoryId");

                    b.ToTable("JobTemplate");
                });

            modelBuilder.Entity("ShiftWorx.Models.Layout", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("FactoryId")
                        .HasColumnType("int");

                    b.Property<int?>("FreePointProductId")
                        .HasColumnType("int");

                    b.Property<bool>("IsReporting")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("fp_core_id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FactoryId");

                    b.HasIndex("FreePointProductId");

                    b.ToTable("Layout");
                });

            modelBuilder.Entity("ShiftWorx.Models.Machine", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Datasourceforbb")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("FactoryId")
                        .HasColumnType("int");

                    b.Property<string>("Group")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("RemoteAddress")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("fp_core_Id")
                        .HasColumnType("int");

                    b.Property<bool>("isBBActive")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("FactoryId");

                    b.ToTable("Machine");
                });

            modelBuilder.Entity("ShiftWorx.Models.Note", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime?>("AttachedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MachineId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("MachineId");

                    b.ToTable("Note");
                });

            modelBuilder.Entity("ShiftWorx.Models.Operation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClientKey")
                        .HasMaxLength(191)
                        .HasColumnType("nvarchar(191)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("EstmatedStartDate")
                        .HasColumnType("datetime2");

                    b.Property<double?>("ExpectedCycleTime")
                        .HasColumnType("float");

                    b.Property<double?>("ExpectedCycleTimeDeviation")
                        .HasColumnType("float");

                    b.Property<string>("Group")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsOpen")
                        .HasColumnType("bit");

                    b.Property<int?>("JobId")
                        .HasColumnType("int");

                    b.Property<int?>("Multiplier")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<int?>("OperationTemplateId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("PlannedEndDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("RunRateScale")
                        .HasColumnType("int");

                    b.Property<int?>("RuntimeScale")
                        .HasColumnType("int");

                    b.Property<int?>("TargetCount")
                        .HasColumnType("int");

                    b.Property<double?>("TargetRunrate")
                        .HasColumnType("float");

                    b.Property<double?>("TargetRuntime")
                        .HasColumnType("float");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("fp_core_Id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("JobId");

                    b.ToTable("Operation");
                });

            modelBuilder.Entity("ShiftWorx.Models.OperationTemplate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClientKey")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("EstmatedStartDate")
                        .HasColumnType("datetime2");

                    b.Property<double?>("ExpectedCycleTime")
                        .HasColumnType("float");

                    b.Property<double?>("ExpectedCycleTimeDeviation")
                        .HasColumnType("float");

                    b.Property<string>("Group")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<int?>("JobTemplateId")
                        .HasColumnType("int");

                    b.Property<int?>("Multiplier")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<DateTime?>("PlannedEndDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("RunRateScale")
                        .HasColumnType("int");

                    b.Property<int?>("RuntimeScale")
                        .HasColumnType("int");

                    b.Property<int?>("TargetCount")
                        .HasColumnType("int");

                    b.Property<double?>("TargetRunrate")
                        .HasColumnType("float");

                    b.Property<double?>("TargetRuntime")
                        .HasColumnType("float");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("fp_core_Id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("JobTemplateId");

                    b.ToTable("OperationTemplate");
                });

            modelBuilder.Entity("ShiftWorx.Models.Panel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Config")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("LayoutId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PanelTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Placement")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("fp_core_id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LayoutId");

                    b.HasIndex("PanelTypeId");

                    b.ToTable("Panel");
                });

            modelBuilder.Entity("ShiftWorx.Models.PanelPreviewInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PanelTier")
                        .HasColumnType("int");

                    b.Property<string>("PanelTypeKey")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PreviewImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("fp_core_id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("PanelPreviewInfo");
                });

            modelBuilder.Entity("ShiftWorx.Models.PanelType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("Category")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("GlobalAccess")
                        .HasColumnType("bit");

                    b.Property<string>("Key")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MetaData")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("VersionMajor")
                        .HasColumnType("int");

                    b.Property<int>("VersionMinor")
                        .HasColumnType("int");

                    b.Property<int>("fp_core_id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("PanelType");
                });

            modelBuilder.Entity("ShiftWorx.Models.ReportDefinition", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("ActiveShiftBased")
                        .HasColumnType("bit");

                    b.Property<int?>("CalculationWindowTransitionType")
                        .HasColumnType("int");

                    b.Property<int?>("ChartType")
                        .HasColumnType("int");

                    b.Property<string>("Color")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Divisor")
                        .HasColumnType("int");

                    b.Property<DateTime?>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("FactoryId")
                        .HasColumnType("int");

                    b.Property<int?>("MathType")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Offset")
                        .HasColumnType("int");

                    b.Property<int?>("ReportRangeType")
                        .HasColumnType("int");

                    b.Property<int?>("ReportSubTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("ReportType")
                        .HasColumnType("int");

                    b.Property<int?>("RollingCalculationWindow")
                        .HasColumnType("int");

                    b.Property<bool>("ScrapAdjust")
                        .HasColumnType("bit");

                    b.Property<int?>("SemiFixedCalculationWindow")
                        .HasColumnType("int");

                    b.Property<int?>("SemiFixedCalculationWindowOffset")
                        .HasColumnType("int");

                    b.Property<bool>("ShiftBased")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("StartTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("StaticResult")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Suffix")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TickRate")
                        .HasColumnType("int");

                    b.Property<int?>("TickRateType")
                        .HasColumnType("int");

                    b.Property<int?>("TimeStepSeconds")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<int?>("ValueType")
                        .HasColumnType("int");

                    b.Property<int?>("WindowSizeSeconds")
                        .HasColumnType("int");

                    b.Property<int>("fp_core_id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FactoryId");

                    b.HasIndex("ReportSubTypeId");

                    b.ToTable("ReportDefinition");
                });

            modelBuilder.Entity("ShiftWorx.Models.ReportDefinitionCollector", b =>
                {
                    b.Property<int>("ReportDefinitionId")
                        .HasColumnType("int");

                    b.Property<int>("CollectorId")
                        .HasColumnType("int");

                    b.HasKey("ReportDefinitionId", "CollectorId");

                    b.HasIndex("CollectorId");

                    b.ToTable("ReportDefinitionCollector");
                });

            modelBuilder.Entity("ShiftWorx.Models.ReportDefinitionJob", b =>
                {
                    b.Property<int>("ReportDefinitionId")
                        .HasColumnType("int");

                    b.Property<int>("JobId")
                        .HasColumnType("int");

                    b.HasKey("ReportDefinitionId", "JobId");

                    b.HasIndex("JobId");

                    b.ToTable("ReportDefinitionJob");
                });

            modelBuilder.Entity("ShiftWorx.Models.ReportDefinitionMachine", b =>
                {
                    b.Property<int>("ReportDefinitionId")
                        .HasColumnType("int");

                    b.Property<int>("MachineId")
                        .HasColumnType("int");

                    b.HasKey("ReportDefinitionId", "MachineId");

                    b.HasIndex("MachineId");

                    b.ToTable("ReportDefinitionMachine");
                });

            modelBuilder.Entity("ShiftWorx.Models.ReportDefinitionOperation", b =>
                {
                    b.Property<int>("ReportDefinitionId")
                        .HasColumnType("int");

                    b.Property<int>("OperationId")
                        .HasColumnType("int");

                    b.HasKey("ReportDefinitionId", "OperationId");

                    b.HasIndex("OperationId");

                    b.ToTable("ReportDefinitionOperation");
                });

            modelBuilder.Entity("ShiftWorx.Models.ReportDefinitionStatusCode", b =>
                {
                    b.Property<int>("ReportDefinitionId")
                        .HasColumnType("int");

                    b.Property<int>("StatusCodeId")
                        .HasColumnType("int");

                    b.HasKey("ReportDefinitionId", "StatusCodeId");

                    b.HasIndex("StatusCodeId");

                    b.ToTable("ReportDefinitionStatusCode");
                });

            modelBuilder.Entity("ShiftWorx.Models.ReportSubType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<string>("Key")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("fp_core_id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ReportSubType");
                });

            modelBuilder.Entity("ShiftWorx.Models.StatusCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Color")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("FactoryId")
                        .HasColumnType("int");

                    b.Property<string>("Group")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("fp_core_Id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FactoryId");

                    b.ToTable("StatusCategory");
                });

            modelBuilder.Entity("ShiftWorx.Models.StatusCode", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Color")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("fp_core_Id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("StatusCode");
                });

            modelBuilder.Entity("ShiftWorx.Models.Tag", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Color")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TagType")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("fp_core_id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.ToTable("Tag");
                });

            modelBuilder.Entity("ShiftWorx.Models.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<int?>("CompanyId")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("ShiftWorx.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("ShiftWorx.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ShiftWorx.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("ShiftWorx.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ShiftWorx.Models.Attachment", b =>
                {
                    b.HasOne("ShiftWorx.Models.Job", "AttachedJob")
                        .WithMany()
                        .HasForeignKey("AttachedJobId");

                    b.HasOne("ShiftWorx.Models.StatusCode", "AttachedStatusCode")
                        .WithMany()
                        .HasForeignKey("AttachedStatusCodeId");

                    b.HasOne("ShiftWorx.Models.Machine", "Machine")
                        .WithMany("Attachments")
                        .HasForeignKey("MachineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AttachedJob");

                    b.Navigation("AttachedStatusCode");

                    b.Navigation("Machine");
                });

            modelBuilder.Entity("ShiftWorx.Models.Checklist", b =>
                {
                    b.HasOne("ShiftWorx.Models.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ShiftWorx.Models.Tag", "DataSourceTag")
                        .WithMany()
                        .HasForeignKey("DataSourceTagId");

                    b.HasOne("ShiftWorx.Models.FpCoreRole", "Fp_Core_Role")
                        .WithMany()
                        .HasForeignKey("Fp_Core_RoleId");

                    b.HasOne("ShiftWorx.Models.FpCoreUser", "Fp_Core_User")
                        .WithMany()
                        .HasForeignKey("Fp_Core_UserId");

                    b.HasOne("ShiftWorx.Models.Job", "Job")
                        .WithMany()
                        .HasForeignKey("JobId");

                    b.HasOne("ShiftWorx.Models.Machine", "Machine")
                        .WithMany()
                        .HasForeignKey("MachineId");

                    b.HasOne("ShiftWorx.Models.Operation", "Operation")
                        .WithMany()
                        .HasForeignKey("OperationId");

                    b.HasOne("ShiftWorx.Models.ChecklistTemplate", "Template")
                        .WithMany()
                        .HasForeignKey("TemplateId");

                    b.HasOne("ShiftWorx.Models.Tag", "UserTag")
                        .WithMany()
                        .HasForeignKey("UserTagId");

                    b.Navigation("Company");

                    b.Navigation("DataSourceTag");

                    b.Navigation("Fp_Core_Role");

                    b.Navigation("Fp_Core_User");

                    b.Navigation("Job");

                    b.Navigation("Machine");

                    b.Navigation("Operation");

                    b.Navigation("Template");

                    b.Navigation("UserTag");
                });

            modelBuilder.Entity("ShiftWorx.Models.ChecklistItem", b =>
                {
                    b.HasOne("ShiftWorx.Models.ChecklistTemplateSection", null)
                        .WithMany("Items")
                        .HasForeignKey("ChecklistTemplateSectionId");

                    b.HasOne("ShiftWorx.Models.ChecklistItemRule", "Rule")
                        .WithMany()
                        .HasForeignKey("RuleId");

                    b.HasOne("ShiftWorx.Models.ChecklistSection", "Section")
                        .WithMany("Items")
                        .HasForeignKey("SectionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ShiftWorx.Models.ChecklistItemSelectorOption", "SelectedOption")
                        .WithMany()
                        .HasForeignKey("SelectedOptionId");

                    b.HasOne("ShiftWorx.Models.ChecklistItemSelector", "Selector")
                        .WithOne("ChecklistItem")
                        .HasForeignKey("ShiftWorx.Models.ChecklistItem", "SelectorId");

                    b.HasOne("ShiftWorx.Models.ChecklistTemplateItem", "Template")
                        .WithMany()
                        .HasForeignKey("TemplateId");

                    b.Navigation("Rule");

                    b.Navigation("Section");

                    b.Navigation("SelectedOption");

                    b.Navigation("Selector");

                    b.Navigation("Template");
                });

            modelBuilder.Entity("ShiftWorx.Models.ChecklistItemRule", b =>
                {
                    b.HasOne("ShiftWorx.Models.ChecklistTemplateItemRule", "Template")
                        .WithMany()
                        .HasForeignKey("TemplateId");

                    b.Navigation("Template");
                });

            modelBuilder.Entity("ShiftWorx.Models.ChecklistItemSelectorOption", b =>
                {
                    b.HasOne("ShiftWorx.Models.ChecklistItemSelector", "ChecklistItemSelector")
                        .WithMany("Options")
                        .HasForeignKey("ChecklistItemSelectorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ChecklistItemSelector");
                });

            modelBuilder.Entity("ShiftWorx.Models.ChecklistSection", b =>
                {
                    b.HasOne("ShiftWorx.Models.Checklist", "Checklist")
                        .WithMany("Sections")
                        .HasForeignKey("ChecklistId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ShiftWorx.Models.ChecklistTemplateSection", "Template")
                        .WithMany()
                        .HasForeignKey("TemplateId");

                    b.Navigation("Checklist");

                    b.Navigation("Template");
                });

            modelBuilder.Entity("ShiftWorx.Models.ChecklistTemplate", b =>
                {
                    b.HasOne("ShiftWorx.Models.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");
                });

            modelBuilder.Entity("ShiftWorx.Models.ChecklistTemplateFpCoreRole", b =>
                {
                    b.HasOne("ShiftWorx.Models.ChecklistTemplate", "ChecklistTemplate")
                        .WithMany("RoleOptions")
                        .HasForeignKey("ChecklistTemplateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ShiftWorx.Models.FpCoreUser", "FpCoreRole")
                        .WithMany()
                        .HasForeignKey("FpCoreRoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ChecklistTemplate");

                    b.Navigation("FpCoreRole");
                });

            modelBuilder.Entity("ShiftWorx.Models.ChecklistTemplateFpCoreUser", b =>
                {
                    b.HasOne("ShiftWorx.Models.ChecklistTemplate", "ChecklistTemplate")
                        .WithMany("UserOptions")
                        .HasForeignKey("ChecklistTemplateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ShiftWorx.Models.FpCoreUser", "FpCoreUser")
                        .WithMany()
                        .HasForeignKey("FpCoreUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ChecklistTemplate");

                    b.Navigation("FpCoreUser");
                });

            modelBuilder.Entity("ShiftWorx.Models.ChecklistTemplateItem", b =>
                {
                    b.HasOne("ShiftWorx.Models.ChecklistTemplateItemRule", "Rule")
                        .WithMany()
                        .HasForeignKey("RuleId");

                    b.HasOne("ShiftWorx.Models.ChecklistTemplateSection", "Section")
                        .WithMany()
                        .HasForeignKey("SectionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ShiftWorx.Models.ChecklistTemplateItemSelector", "Selector")
                        .WithOne("ChecklistTemplateItem")
                        .HasForeignKey("ShiftWorx.Models.ChecklistTemplateItem", "SelectorId");

                    b.Navigation("Rule");

                    b.Navigation("Section");

                    b.Navigation("Selector");
                });

            modelBuilder.Entity("ShiftWorx.Models.ChecklistTemplateItemSelectorOption", b =>
                {
                    b.HasOne("ShiftWorx.Models.ChecklistTemplateItemSelector", "ChecklistTemplateItemSelector")
                        .WithMany("Options")
                        .HasForeignKey("ChecklistTemplateItemSelectorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ChecklistTemplateItemSelector");
                });

            modelBuilder.Entity("ShiftWorx.Models.ChecklistTemplateJob", b =>
                {
                    b.HasOne("ShiftWorx.Models.ChecklistTemplate", "ChecklistTemplate")
                        .WithMany("JobOptions")
                        .HasForeignKey("ChecklistTemplateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ShiftWorx.Models.Job", "Job")
                        .WithMany()
                        .HasForeignKey("JobId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ChecklistTemplate");

                    b.Navigation("Job");
                });

            modelBuilder.Entity("ShiftWorx.Models.ChecklistTemplateMachine", b =>
                {
                    b.HasOne("ShiftWorx.Models.ChecklistTemplate", "ChecklistTemplate")
                        .WithMany("MachineOptions")
                        .HasForeignKey("ChecklistTemplateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ShiftWorx.Models.Machine", "Machine")
                        .WithMany()
                        .HasForeignKey("MachineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ChecklistTemplate");

                    b.Navigation("Machine");
                });

            modelBuilder.Entity("ShiftWorx.Models.ChecklistTemplateOperation", b =>
                {
                    b.HasOne("ShiftWorx.Models.ChecklistTemplate", "ChecklistTemplate")
                        .WithMany("OperationOptions")
                        .HasForeignKey("ChecklistTemplateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ShiftWorx.Models.Operation", "Operation")
                        .WithMany()
                        .HasForeignKey("OperationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ChecklistTemplate");

                    b.Navigation("Operation");
                });

            modelBuilder.Entity("ShiftWorx.Models.ChecklistTemplateSection", b =>
                {
                    b.HasOne("ShiftWorx.Models.ChecklistTemplate", null)
                        .WithMany("Sections")
                        .HasForeignKey("ChecklistTemplateId");
                });

            modelBuilder.Entity("ShiftWorx.Models.ChecklistTemplateTag", b =>
                {
                    b.HasOne("ShiftWorx.Models.ChecklistTemplate", "ChecklistTemplate")
                        .WithMany("TagOptions")
                        .HasForeignKey("ChecklistTemplateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ShiftWorx.Models.Tag", "Tag")
                        .WithMany()
                        .HasForeignKey("TagId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ChecklistTemplate");

                    b.Navigation("Tag");
                });

            modelBuilder.Entity("ShiftWorx.Models.Collector", b =>
                {
                    b.HasOne("ShiftWorx.Models.Machine", "Machine")
                        .WithMany("Collectors")
                        .HasForeignKey("MachineId");

                    b.Navigation("Machine");
                });

            modelBuilder.Entity("ShiftWorx.Models.CollectorData", b =>
                {
                    b.HasOne("ShiftWorx.Models.Collector", "Collector")
                        .WithMany("CollectorData")
                        .HasForeignKey("CollectorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Collector");
                });

            modelBuilder.Entity("ShiftWorx.Models.Factory", b =>
                {
                    b.HasOne("ShiftWorx.Models.Company", "Company")
                        .WithMany("Factories")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");
                });

            modelBuilder.Entity("ShiftWorx.Models.FactoryOption", b =>
                {
                    b.HasOne("ShiftWorx.Models.Factory", null)
                        .WithMany("FactoryOptions")
                        .HasForeignKey("FactoryId");
                });

            modelBuilder.Entity("ShiftWorx.Models.FileAttachment", b =>
                {
                    b.HasOne("ShiftWorx.Models.Checklist", null)
                        .WithMany("FileAttachments")
                        .HasForeignKey("ChecklistId");

                    b.HasOne("ShiftWorx.Models.ChecklistItem", null)
                        .WithMany("FileAttachments")
                        .HasForeignKey("ChecklistItemId");

                    b.HasOne("ShiftWorx.Models.ChecklistTemplate", null)
                        .WithMany("FileAttachments")
                        .HasForeignKey("ChecklistTemplateId");

                    b.HasOne("ShiftWorx.Models.ChecklistTemplateItem", null)
                        .WithMany("FileAttachments")
                        .HasForeignKey("ChecklistTemplateItemId");
                });

            modelBuilder.Entity("ShiftWorx.Models.FpCoreRole", b =>
                {
                    b.HasOne("ShiftWorx.Models.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId");

                    b.Navigation("Company");
                });

            modelBuilder.Entity("ShiftWorx.Models.FpCoreUser", b =>
                {
                    b.HasOne("ShiftWorx.Models.FpCoreRole", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("ShiftWorx.Models.Job", b =>
                {
                    b.HasOne("ShiftWorx.Models.Factory", "Factory")
                        .WithMany("Jobs")
                        .HasForeignKey("FactoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Factory");
                });

            modelBuilder.Entity("ShiftWorx.Models.JobTemplate", b =>
                {
                    b.HasOne("ShiftWorx.Models.Factory", "Factory")
                        .WithMany("JobTemplates")
                        .HasForeignKey("FactoryId");

                    b.Navigation("Factory");
                });

            modelBuilder.Entity("ShiftWorx.Models.Layout", b =>
                {
                    b.HasOne("ShiftWorx.Models.Factory", "Factory")
                        .WithMany("Layouts")
                        .HasForeignKey("FactoryId");

                    b.HasOne("ShiftWorx.Models.FreePointProduct", "FreePointProduct")
                        .WithMany()
                        .HasForeignKey("FreePointProductId");

                    b.Navigation("Factory");

                    b.Navigation("FreePointProduct");
                });

            modelBuilder.Entity("ShiftWorx.Models.Machine", b =>
                {
                    b.HasOne("ShiftWorx.Models.Factory", "Factory")
                        .WithMany("Machines")
                        .HasForeignKey("FactoryId");

                    b.Navigation("Factory");
                });

            modelBuilder.Entity("ShiftWorx.Models.Note", b =>
                {
                    b.HasOne("ShiftWorx.Models.Machine", "Machine")
                        .WithMany()
                        .HasForeignKey("MachineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Machine");
                });

            modelBuilder.Entity("ShiftWorx.Models.Operation", b =>
                {
                    b.HasOne("ShiftWorx.Models.Job", "Job")
                        .WithMany("Operations")
                        .HasForeignKey("JobId");

                    b.Navigation("Job");
                });

            modelBuilder.Entity("ShiftWorx.Models.OperationTemplate", b =>
                {
                    b.HasOne("ShiftWorx.Models.JobTemplate", "JobTemplate")
                        .WithMany("Operations")
                        .HasForeignKey("JobTemplateId");

                    b.Navigation("JobTemplate");
                });

            modelBuilder.Entity("ShiftWorx.Models.Panel", b =>
                {
                    b.HasOne("ShiftWorx.Models.Layout", "Layout")
                        .WithMany("Panels")
                        .HasForeignKey("LayoutId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ShiftWorx.Models.PanelType", "PanelType")
                        .WithMany()
                        .HasForeignKey("PanelTypeId");

                    b.Navigation("Layout");

                    b.Navigation("PanelType");
                });

            modelBuilder.Entity("ShiftWorx.Models.ReportDefinition", b =>
                {
                    b.HasOne("ShiftWorx.Models.Factory", "Factory")
                        .WithMany()
                        .HasForeignKey("FactoryId");

                    b.HasOne("ShiftWorx.Models.ReportSubType", "ReportSubType")
                        .WithMany()
                        .HasForeignKey("ReportSubTypeId");

                    b.Navigation("Factory");

                    b.Navigation("ReportSubType");
                });

            modelBuilder.Entity("ShiftWorx.Models.ReportDefinitionCollector", b =>
                {
                    b.HasOne("ShiftWorx.Models.Collector", "Collector")
                        .WithMany()
                        .HasForeignKey("CollectorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ShiftWorx.Models.ReportDefinition", "ReportDefinition")
                        .WithMany("Collectors")
                        .HasForeignKey("ReportDefinitionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Collector");

                    b.Navigation("ReportDefinition");
                });

            modelBuilder.Entity("ShiftWorx.Models.ReportDefinitionJob", b =>
                {
                    b.HasOne("ShiftWorx.Models.Job", "Job")
                        .WithMany("ReportDefinitions")
                        .HasForeignKey("JobId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ShiftWorx.Models.ReportDefinition", "ReportDefinition")
                        .WithMany("Jobs")
                        .HasForeignKey("ReportDefinitionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Job");

                    b.Navigation("ReportDefinition");
                });

            modelBuilder.Entity("ShiftWorx.Models.ReportDefinitionMachine", b =>
                {
                    b.HasOne("ShiftWorx.Models.Machine", "Machine")
                        .WithMany()
                        .HasForeignKey("MachineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ShiftWorx.Models.ReportDefinition", "ReportDefinition")
                        .WithMany("Machines")
                        .HasForeignKey("ReportDefinitionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Machine");

                    b.Navigation("ReportDefinition");
                });

            modelBuilder.Entity("ShiftWorx.Models.ReportDefinitionOperation", b =>
                {
                    b.HasOne("ShiftWorx.Models.Operation", "Operation")
                        .WithMany("ReportDefinitions")
                        .HasForeignKey("OperationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ShiftWorx.Models.ReportDefinition", "ReportDefinition")
                        .WithMany("Operations")
                        .HasForeignKey("ReportDefinitionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Operation");

                    b.Navigation("ReportDefinition");
                });

            modelBuilder.Entity("ShiftWorx.Models.ReportDefinitionStatusCode", b =>
                {
                    b.HasOne("ShiftWorx.Models.ReportDefinition", "ReportDefinition")
                        .WithMany("StatusCodes")
                        .HasForeignKey("ReportDefinitionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ShiftWorx.Models.StatusCode", "StatusCode")
                        .WithMany("ReportDefinitions")
                        .HasForeignKey("StatusCodeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ReportDefinition");

                    b.Navigation("StatusCode");
                });

            modelBuilder.Entity("ShiftWorx.Models.StatusCategory", b =>
                {
                    b.HasOne("ShiftWorx.Models.Factory", "Factory")
                        .WithMany("Categories")
                        .HasForeignKey("FactoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Factory");
                });

            modelBuilder.Entity("ShiftWorx.Models.StatusCode", b =>
                {
                    b.HasOne("ShiftWorx.Models.StatusCategory", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("ShiftWorx.Models.Tag", b =>
                {
                    b.HasOne("ShiftWorx.Models.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");
                });

            modelBuilder.Entity("ShiftWorx.Models.User", b =>
                {
                    b.HasOne("ShiftWorx.Models.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId");

                    b.Navigation("Company");
                });

            modelBuilder.Entity("ShiftWorx.Models.Checklist", b =>
                {
                    b.Navigation("FileAttachments");

                    b.Navigation("Sections");
                });

            modelBuilder.Entity("ShiftWorx.Models.ChecklistItem", b =>
                {
                    b.Navigation("FileAttachments");
                });

            modelBuilder.Entity("ShiftWorx.Models.ChecklistItemSelector", b =>
                {
                    b.Navigation("ChecklistItem");

                    b.Navigation("Options");
                });

            modelBuilder.Entity("ShiftWorx.Models.ChecklistSection", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("ShiftWorx.Models.ChecklistTemplate", b =>
                {
                    b.Navigation("FileAttachments");

                    b.Navigation("JobOptions");

                    b.Navigation("MachineOptions");

                    b.Navigation("OperationOptions");

                    b.Navigation("RoleOptions");

                    b.Navigation("Sections");

                    b.Navigation("TagOptions");

                    b.Navigation("UserOptions");
                });

            modelBuilder.Entity("ShiftWorx.Models.ChecklistTemplateItem", b =>
                {
                    b.Navigation("FileAttachments");
                });

            modelBuilder.Entity("ShiftWorx.Models.ChecklistTemplateItemSelector", b =>
                {
                    b.Navigation("ChecklistTemplateItem");

                    b.Navigation("Options");
                });

            modelBuilder.Entity("ShiftWorx.Models.ChecklistTemplateSection", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("ShiftWorx.Models.Collector", b =>
                {
                    b.Navigation("CollectorData");
                });

            modelBuilder.Entity("ShiftWorx.Models.Company", b =>
                {
                    b.Navigation("Factories");
                });

            modelBuilder.Entity("ShiftWorx.Models.Factory", b =>
                {
                    b.Navigation("Categories");

                    b.Navigation("FactoryOptions");

                    b.Navigation("JobTemplates");

                    b.Navigation("Jobs");

                    b.Navigation("Layouts");

                    b.Navigation("Machines");
                });

            modelBuilder.Entity("ShiftWorx.Models.Job", b =>
                {
                    b.Navigation("Operations");

                    b.Navigation("ReportDefinitions");
                });

            modelBuilder.Entity("ShiftWorx.Models.JobTemplate", b =>
                {
                    b.Navigation("Operations");
                });

            modelBuilder.Entity("ShiftWorx.Models.Layout", b =>
                {
                    b.Navigation("Panels");
                });

            modelBuilder.Entity("ShiftWorx.Models.Machine", b =>
                {
                    b.Navigation("Attachments");

                    b.Navigation("Collectors");
                });

            modelBuilder.Entity("ShiftWorx.Models.Operation", b =>
                {
                    b.Navigation("ReportDefinitions");
                });

            modelBuilder.Entity("ShiftWorx.Models.ReportDefinition", b =>
                {
                    b.Navigation("Collectors");

                    b.Navigation("Jobs");

                    b.Navigation("Machines");

                    b.Navigation("Operations");

                    b.Navigation("StatusCodes");
                });

            modelBuilder.Entity("ShiftWorx.Models.StatusCode", b =>
                {
                    b.Navigation("ReportDefinitions");
                });
#pragma warning restore 612, 618
        }
    }
}
